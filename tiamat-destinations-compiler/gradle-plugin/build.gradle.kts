plugins {
    id("java-gradle-plugin")
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.m2p)
}

version = libConfig.versions.tiamat.destinations.get()
group = "io.github.composegears"

dependencies {
    compileOnly(libs.kotlin.gradle.plugin.api)
}

gradlePlugin {
    plugins {
        create("TiamatDestinationsGradlePlugin") {
            id = "io.github.composegears.tiamat.destinations.compiler"
            implementationClass = "com.composegears.tiamat.destinations.TiamatDestinationsCompilerPlugin"
        }
    }
}

// ----------   BuildConfig   ----------
// generating BuildConfig in order to pass compiler plugin version from config into code

// generated src dit
val buildConfigDir = project.layout.buildDirectory.dir("generated/main/kotlin")
// attach generated folder as src
sourceSets {
    main {
        kotlin {
            srcDir(buildConfigDir)
        }
    }
}
// clear generated src BEFORE clear task (or else it will fail, saying: `cant delete src folder`)
tasks["clean"].doFirst {
    buildConfigDir.get().asFile.deleteRecursively()
}
// generate BEFORE kotlin compilation happen (upon gradle sync & actual compilation)
tasks["compileKotlin"].doFirst {
    val dir = buildConfigDir.get().asFile
    dir.deleteRecursively()
    val subDir = File(dir, "/com/composegears/tiamat/destinations")
    subDir.mkdirs()
    val file = File(subDir, "BuildConfig.kt")
    file.writeText(
        """
            package com.composegears.tiamat.destinations
            
            // This file is generated by the gradle build script. Do not modify manually.
            object BuildConfig {
                const val COMPILER_PLUGIN_VERSION = "${libConfig.versions.tiamat.destinations.get()}"
            }
        """.trimIndent()
    )
}
// ----------   BuildConfig   ----------

tasks.register("sourcesJar", Jar::class) {
    group = "build"
    description = "Assembles Kotlin sources"

    archiveClassifier.set("sources")
    from(sourceSets.main.get().allSource)
    dependsOn(tasks.classes)
}

publishing {
    publications {
        create<MavenPublication>("gradlePlugin") {
            artifact(tasks["sourcesJar"])
        }
    }
}

m2p {
    description = "Tiamat Destinations Gradle Plugin"
}